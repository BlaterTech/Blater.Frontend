@typeparam TItemType where TItemType : IConvertible

@inherits Blater.Frontend.Client.Auto.AutoBuilders.Base.BaseAutoFormComponent<TItemType>
@using Blater.Frontend.Client.Auto.AutoModels.Base
@using Blater.Frontend.Client.Auto.AutoModels.Enumerations
@using Blater.Frontend.Client.Services
@implements Blater.Frontend.Client.Auto.AutoInterfaces.IAutoBuildableComponent

@inject LocalizationService LocalizationService

<div id="auto-select-input" class="@ExtraClass">
    <MudSelect T="TItemType"
               Label="@LocalizationService.GetValue($"Label-{TypeName}")"
               Variant="Variant.Filled"
               AnchorOrigin="Origin.BottomCenter"
               Value="@Value"
               ValueChanged="@(async (x) => await NotifyValueChanged(x))">
        @foreach (TItemType value in Enum.GetValues(typeof(TItemType)))
        {
            <MudSelectItem T="TItemType" Value="@value">@LocalizationService.GetValue(value?.ToString() ?? "")</MudSelectItem>
        }
    </MudSelect>
</div>


@code {
    public BaseAutoComponentTypeEnumeration ComponentType => AutoFormComponentInputType.AutoSelectComponentInput;
}