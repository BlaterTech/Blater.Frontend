@using Blater.Frontend.Client.Auto.Components.AutoTable.Models

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Material.Filled.DeleteForever" Class="mr-3 mb-n1"/>
            Filter
        </MudText>
    </TitleContent>
    <DialogContent>
        @foreach (var whereBuilder in _whereBuilders)
        {
            <div class="d-flex align-center justify-center">
                <MudSelect T="string" Label="" Clearable="true" Required="true">
                    @foreach (var columnConfig in ColumnConfigurations.Where(x => x.DisableFilter == false))
                    {
                        <MudSelectItem Value="@columnConfig.PropertyInfo.Name"/>
                    }
                </MudSelect>
                <MudSelect T="string" Label="" Clearable="true" Required="true">
                    @foreach (var columnConfig in ColumnConfigurations.Where(x => x.DisableFilter == false))
                    {
                        <MudSelectItem Value="@columnConfig.PropertyInfo.Name"/>
                    }
                </MudSelect>
                <MudTextField T="object" @bind-Value="@whereBuilder.Value" Label="Filter" />
            </div>
        }
        <div class="d-flex justify-center align-start gap-2">
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton Color="Color.Error" OnClick="DeleteServer">Delete Server</MudButton>
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="DeleteServer">Delete Server</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [Inject]
    private ISnackbar Snackbar { get; set; } = null!;

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    [EditorRequired]
    public List<ColumnConfiguration> ColumnConfigurations { get; set; } = [];
    
    internal class WhereBuilder
    {
        public string Key { get; set; } = null!;
        public string Type { get; set; } = null!;
        public object? Value { get; set; }
    };

    private List<WhereBuilder> _whereBuilders = [];

    private void Cancel() => MudDialog.Cancel();
    
    private void DeleteServer()
    {
        //In a real world scenario this bool would probably be a service to delete the item from api/database
    }
}