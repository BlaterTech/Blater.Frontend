@inherits Blater.FrontEnd.Auto.Bases.BaseAutoFormComponent<string>
@using Blater.Enumerations.AutoModel
@using Blater.FrontEnd.Services
@using MudBlazor
@implements IAutoBuildableComponent

@inject LocalizationService LocalizationService

<div id="auto-password-input" class="@ExtraClass">
    <MudTextField
        T="string"
        Disabled="Disabled"
        Class="@ExtraClass"
        Value="@_password"
        Required="@Required"
        ValueChanged="@PasswordChanged"
        Label="@LabelName"
        Error="@HasValidationError"
        ErrorText="@ValidationErrorMessage"
        RequiredError="@ValidationErrorMessage"
        Variant="@Variant.Filled"
        InputType="@_passwordInput"
        Adornment="Adornment.End"
        AdornmentIcon="@_passwordInputIcon"
        OnAdornmentClick="ShowPassword"
        AdornmentAriaLabel="@LocalizationService.Get("AutoPasswordInput-AdornmentAriaLabel")"/>
</div>

@code
{
    public BaseAutoComponentTypeEnumeration ComponentType => AutoFormInputType.AutoPasswordInput;

    bool _isShow;
    InputType _passwordInput = InputType.Password;
    string _passwordInputIcon = Icons.Material.Filled.VisibilityOff;

    string _password = string.Empty;

    void ShowPassword()
    {
        @if (_isShow)
        {
            _isShow = false;
            _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
            _passwordInput = InputType.Password;
        }
        else
        {
            _isShow = true;
            _passwordInputIcon = Icons.Material.Filled.Visibility;
            _passwordInput = InputType.Text;
        }
    }

    private async Task PasswordChanged(string password)
    {
        _password = password;

        //var hashedPassword = BCrypt.Net.BCrypt.HashPassword(password);

        await ValueChanged.InvokeAsync(_password);
    }
}